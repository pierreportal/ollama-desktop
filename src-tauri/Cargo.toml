[package]
name = "ollama_desktop"
version = "0.1.0"
description = "A private and open source ChatGPT clone using Ollama."
authors = ["Pierre Portal"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "ollama_desktop_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
tauri = { version = "2", features = [] }
tauri-plugin-opener = "2"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_with_macros = "3"
ollama-rs = { version = "0.2.5", features = ["stream"] }
tokio = { version = "1", features = ["full"] }
tokio-stream = "0.1.17"
# For dev and easy to go first experience, we set up an in-memory surrealdb for now.
# Remove `default-features=false, features = ...` to enable persistent storage.
surrealdb = { version = "1.0.0", default-features = false, features = [
    "kv-mem",
    "kv-rocksdb",
] }
# surrealdb = "1.0.0"

ts-rs = { version = "7" }

[dev-dependencies]
anyhow = "1"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
